(今後の改善点)
 - IF文の書き換え (条件分岐の順番が異なっても字面統一可能にしたい)
 - ExtractConditions.sml の改名 (抽出するのは条件のみではないため)
 - 構文木の根の可換演算式だけ全て候補を列挙しなくて良いようにする
 - 書き換え y : {lv |P (lv)} @->@ P (y) の実装 (P() のマッチングが規則の適用では不可能)
 - 書き換え x |-> y : {lv1, lv2 | P (lv1, lv2)} @->@ P (x, y) の実装 (同上)

2024/3/11
Utils に軽微な変更
書き換え規則の追加

2024/2/16
規則に型制約を追加

2024/2/15
規則中の制限付き変数と通常の変数で同じ名前を使ってマッチングできるよう改良
例：(x + y) * x_ のようなパターンで x と x_ を同一視し、xには乗算をマッチさせず加算をマッチさせることができる。

2024/2/13
コメントの用語を更新

2024/2/9
等価関係を用いた暗黙の条件の導出のバグを修正

2024/2/7
[a, b, ...] を [a] ^ [b] ^ ... に変換する処理をPrimitive.smlに追加。
恒真式を追加して暗黙の条件の導出を行うよう変更。
ルールセットを拡充。
識別子置換のバグを修正。
今まで三鍋手法で行ってきた関連要素抽出 (制約条件抽出) を中村手法 (博論p53) に対応するよう変更 (不変条件について差異あり・リファインメントも同様)。
※ExtractConditions.extract の引数が末尾に1つ増えました (分割前の操作で更新されている変数のリスト) ので空リストを渡すなどご対応をお願いします。
OperationDivision.extractVars と関連関数を AST に移動 (OperationDivision.extractChangedVars は AST.extractChangedVarsLhs に名称変更)。
※OperationDivision.extractVars を AST.extractVars に変更してください。

2023/12/14
VALUES の ; が関数合成演算子と解釈されてしまう問題を解消。

2023/12/13
Primitive.sml で [a, ...] @->@ [a] ^ ... の書き換えを行うよう変更。
規則上で接尾辞 _type により型集合を区別して集合の引き算を非プリミティブにできるようにした(規則 a - b @->@ a /\ (t_type - b) を書き換え規則ファイルに追加すると機能するが現時点では未追加)。

2023/12/8
ルールセットの修正。

2023/12/6
操作分割後の暗黙の条件の導出が代入文まで至っていなかった問題を修正。
局所変数を含む条件式が、関連要素抽出の際に関係ない変数を含んでいる条件として必ず除外されてしまう問題を解消。
式の書き換えで型が不完全なものへの規則適用をしなかった結果冗長性を解消した分と暗黙の条件の導出分が釣り合い変化が起こらなかったとして規則の適用が不十分なまま終了してしまう問題を合間に行う型推論を増やして修正。
関連要素抽出において代入分内で参照されず事前条件で必要な変数と関係している定数を抽出対象とするよう修正。
ルールセットの修正。
等価関係を利用した条件の導出を分割前後各1回のみ行うよう修正。

2023/12/5
a - b : POW (a) を暗黙の条件の導出に使えるように変更。
型推論時に逐次代入が勝手に同時代入に書き換わる問題を修正。
SIGMA、PIの型推論の間違いを修正。
局所変数を含む式の書き換えは対応がとれないため、全称記号→存在記号の変換をルールセットからPrimitive.smlに移動。

2023/12/1
ルールセットの修正。
関連要素抽出がVALUESに対応 (暫定的に=の左辺の識別子が登場するかどうかのみで判断。右辺にIMPORTしたモデル内の定数を含む場合など、VALUESで連鎖的に抽出対象の識別子が増えることは想定せず)。

2023/11/29
関連要素抽出を実装抽出に用いる際にリンク不変条件が失われないよう、詳細化前変数のリストをExtractConditions.extractの第3引数に与えて関連要素として扱うように変更。
関連要素抽出で局所変数が全て消去された VAR を BEGIN に書き換えるよう変更。

2023/11/26
ルールセットの修正。
暗黙の条件の導出後に上位スコープの条件式と重複する条件式を削除するよう修正。
型付けを行う条件式が最初になるよう構文整列を改良。

2023/11/24
デバッグ用メッセージを追加。
リテラルのみから成る条件式が出力結果に残ってしまう問題を修正。

2023/11/23
条件式内に登場する実数・整数リテラルについてそれらの間の関係を利用して暗黙の条件の導出を行えるようにした (例えば、a <= 100 & 1000 <= b から a <= b を導出できるようになった) 。
型推論が不完全な式に対して規則がマッチしないように、 Match.eqExprsWithTypes を実装し型を無視する AST.eqExprs の代わりに用いるようにした (実際に {} (空集合) を介して導出した条件で不整合が発生したため)。
無駄な処理の削除による実行時間の改善 (2023/11/10 の「残りの項」の処理はそもそも暗黙の条件の導出では条件をリストとして見ているため不要)。
main の冗長な処理を削除。
実行時のメッセージを充実。
ルールセットの修正・ルールの追加。

2023/11/22
:: → ANY の変換 (Primitive.sml 内) で生成する局所変数が _ から始まることで文法上不正変数名となってしまう問題を修正 (genVar[3ケタの番号]の形式で、なおかつ :: の両辺に登場しないものとした) 。
規則で表現できないプリミティブ化を識別子の解消より先に行うよう変更 (:: → ANY の変換で新しい局所変数を生成するとき、上位スコープに存在する識別子との重複を気にしなくてよくなるため) 。

2023/11/21
不要な変数を含まず、代入文にない定数を含む制約条件を関連要素抽出で抽出するよう修正。
関連要素抽出を 実装に対応した処理に変更。
関連要素抽出を IMPORTS と INCLUDES に対応した処理に変更。
細分化後のもともと初期化だった操作の操作名を initialisation から operation に変更 (もともと操作だったものと統一) 。
Stringify で操作のトップの代入文が逐次代入のとき BEGIN - END で包むよう修正。
ルールセットの修正。

2023/11/17
**オープンキャンパス時のデモ用のバージョン**
Simplify を改善 (規則で表現できるものを除去、リテラルや予約定数どうしの大小関係の簡単化)。
暗黙の条件の導出時の簡単化からSimplifyを除去し、型推論とAC演算式の平坦化のみに変更 (無限ループ回避のため) 。
構文整列からランダム要素を排除し、登場順に依存するようにした (同じモデルを入力したとき結果が同じになるようにするため)。

2023/11/13
規則を追加・修正
mainでの書き換え適用手順を変更

2023/11/10
=による書き換えを条件式でない式に対しても行い型の整合性が失われていたバグを修正。
暗黙の条件の導出規則について&演算の「残りの項」の記述の必要性をなくすよう修正。
整備中の現時点でのルールセットとして2つのファイル rewritingRules (プリミティブ化 + 式構造統一) と implicitConditionRules (暗黙の条件の導出) をRelease下に追加。

2023/11/7
BS_BecomesEqualList を同時代入に変換する機能を Parser から Primitive に移すとともに、後のフェーズでも BS_BecomesEqualList に対応。
expr1, expr2 の expr1 |-> expr2 への変換は規則で表現可能であるため Primitive から除き、後のフェーズでも , を順序対とする式に対応。
BS_BecomesElt (所属代入) の左辺を式から式のリストに変更。
Primitive で左辺が複数の変数からなる所属代入の ANY への変換ができるよう修正。

2023/11/5
操作分割を条件分岐単位ではなく変更される変数単位の分割に変更 (OperationDivision_old.sml は削除)
Subs, Sbsts を含む変数・関数名に関して該当箇所を Substitutions に変更
各種改名
 - AlphaConversion -> IdentifierDuplication (ファイル名変更)
 - BetaReduction   -> Primitive             (ファイル名変更)
 - PrintComponent  -> Stringify             (ファイル名変更)
 - Lexer.lexer             -> Lexer.tokenize
 - AlphaConversion.convert -> IdentifierDuplication.resolve
 - BetaReduction.expandLet -> Primitive.primitive
項書き換えを用いないプリミティブ化機能のPrimitive.smlへの集約

2023/11/2
操作分割大幅変更のため、今までの操作分割をOperationDivision_old.smlとして読み込むよう変更
初期化代入文の細分化後の操作名を _initialisation から initialisation に変更

2023/10/31
p(a) & a = b => p(b) の暗黙の条件導出を1回のみ行うよう変更
IF文内での上記の導出時に不変条件等を考慮するよう変更

2023/10/29
構文整列において一部の種類の条件式対応できていなかったバグを修正

2023/10/27
構文整列において順序プールが変化しなくなるまで繰り返し実行されるべき順序を求める処理が事前条件に対しては1回のみとなっていたため修正
ASTの一部の関数の名前を変更 (eqExprsInSubstitutions → eqSubstitutions など)
AST.eqExpr, AST.eqSubstitutions について局所変数の宣言順や名前が異なる式どうしの比較に対応
PrintComponent の各関数 foo2bar を fooToBar に変更

2023/10/26
PROPERTIES の局所変数に識別子置換が適用されないバグを修正
構文整列を実装 (AST.eqExpr が局所変数に対応していないため不完全)

2023/10/19
参照しているモデルのリネームに対応した構文木に変更・デフォルトでドット前後を区別 (foo.bar を Var "foo.bar" ではなく Renamed ("foo", "bar") とする)
リファインメント、インプリメンテーションの出力に対応
その他軽微な修正

2023/10/17
構文木、構文解析、ASTの関連関数がリファインメント・インプリメンテーションに対応

2023/10/16
ファイル名の文字列から拡張子を取り出す関数 (Utils.extractExtension) を追加

2023/10/13
BS_Let (LET代入文) の局所変数宣言の型を string から BToken (Var) に変更
構文木上の型情報を全てクリアする関数 (TypeInference.resetTypeInComponent) を追加
コンポーネント全体の識別子を扱うための高階関数 (AST.mapIdsInComponent) を関連の関数群とともに追加
構文解析器がリファインメントと実装に対応

2023/10/11
OperationDivision内で細分化モデルの操作名を"_operation"に統一していたのを"operation"に変更
（細分化モデルに再び字句解析を施す際に _ から始まる識別子をうまく認識しないため）

2023/10/10
OperationDivision.extractVarsがWHILE文に対応
Utils.compareTransitiveを追加

2023/10/4
拡張変数を廃止、ルールにおいて_を末尾に付けたものは限定変数として扱うように変更
それに伴い_を付けていないものは可換で結合的な演算において1個以上の任意の個数のオペランドとマッチするように変更

2023/10/3
型推論の軽微なバグを修正
p(a) & a = b => p(b) の暗黙の条件導出で計算コスト爆発が起こるため一旦main.sml側で無効化

2023/9/29
操作以外のp(a) & a = b => p(b) の暗黙の条件導出を実装
細分化モデルに(マシンパラメータ/定数/変数)が含まれないとき(CONSTRAINTS/PROPERTIES/INVARIANTS)を削除するよう修正

2023/9/1
所属代入文のANY代入文への書き換えを実装 (Parser.sml内、_から始まる識別子を生成して対応)
式の演算子||のための出力時の括弧の追加

2023/8/17
コード整形（Lexer.smlのインデントを改善など）
OperationDivision.smlのextractVars関数の実装の逐次代入と局所変数代入への対応

2023/8/8
コード整形、軽微な修正

2023/8/5
一部使用関数の変更等による可読性向上
使用されていない関数の削除
細分化モデルの依存関係の出力について同じものがいくつも出力される問題を修正
操作分割後に再度書き換えを行うよう変更
操作中のIF・ANY文の条件式に対して暗黙の条件の抽出を行う機能を実装

2023/8/4
BS_Callの内容の順番を(出力, 名前, 入力)から(名前, 出力, 入力)に変更
MSSSの結合時に対応する部品の逐次実行について、自身より先に実行されるべき細分化モデルファイル名を細分化モデルのEND後のコメント中に書き込むことで依存関係を提示する機能を実装
Priority.smlに残っていた古いトークンの名前を削除

2023/8/2
BC_VALUESの内容の型をBPredicateから(BToken * BExpr) listに変更
INCLUDES・IMPORTS系のパースに失敗する問題（2023/7/31のParserのアルゴリズム変更に伴って発生）を修正

2023/7/31
makeCommutativeを呼ぶ回数を削減
IFの入れ子解消が不完全な問題を修正
操作パラメータの識別子統一がされない問題を修正
操作のナンバリングを廃止し、細分化モデルの操作名を"_operation"と"_initialisation"のいずれかになるよう変更
&がLETの局所変数定義の右辺に現れる時にパースに失敗する問題を修正
予約語の扱いを変えるだけでインプリメンテーションに対応できるようParserのアルゴリズムを一部変更
 - 最初に節の先頭のトークンを先に検索し節ごとにトークン列を切り出していたが、WHILE文内のINVARIANTに対応するため、各節の内容を先にパースして残りのトークンから残りの節をパースするように変更
 - 操作の一番外の代入文は||や;による代入文のリストとならないため、pSubstitutionによるパースからpSubstitutionSimpleによるパースに変更
Utils.firstSliceについて、返り値のリストの順番を逆にし、境目の要素を後半のリストの先頭に含むよう変更
Parserの各種関数で、返り値がパース結果と残りのトークンの組になっているものについて、パース結果を先、残りのトークンを後にするよう変更
ParserのpPredicateの返り値がBExpr*(BToken list)型だったのでBPredicate*(BToken list)型に変更

2023/7/28
見た目を整形
自分で定義した関数名applyHogeをmapHogeに変更（ただしUtils.repeatApplyを除く）
AST.smlをインプリメンテーションに対応できるよう変更
型情報の追記時にマシンパラメータの型集合の型情報の取得に失敗するバグを修正
識別子置換 (登場順に識別子をナンバリング + 置換履歴をBのコメントとして細分化モデル内に出力) を実装
※新しくRename.smlを追加したのでリンクを張ってください

2023/7/20
PrintComponent.sml のラムダ式の出力文字列の括弧の対応がおかしい問題を修正

2023/7/19
字句解析で不正な文字列をOtherトークンにせず例外処理する
上記に伴いOtherトークンをAST.smlから削除
字句解析でリネームされた変数を想定しない
上記に伴いVar, VarLit, VarArbitraryにstring listではなくstringを与えるように変更する

2023/7/18
Match.smlのバグの修正
規則集入力方法変更（拡張変数機能追加）
上記に伴うアルゴリズムの改善
コメントの追加

2023/6/28
AST.smlで定義しているモデルBMchの構造を変更（BClauseと組になっている節の名前の文字列を削除）
上記に伴い節について扱う関数を一斉に変更

2023/6/20
空集合{}を空の集合の外延表記として表現していたが別物として扱うように変更
空シーケンス[]についても同様
※新しくSort.smlを追加したのでリンクを張ってください

2023/6/19
暗黙の条件の導出を実装

2023/6/18
主に実数に関する簡単化規則をSimplifyに追加
論理式の階層構造を与える推論規則ではなくSimplifyで決定するように変更
mainでの簡単化や平坦化、型付け等と推論規則適用の順番を変更

2023/6/16
INITIALISATIONについて勘違いをしていた部分を修正
（操作と同等の扱いとし、細分化モデルにはINITIALISATIONが存在しないようにした
ただし分割後の操作名から元々INITIALISATIONであったことが判別できるようにした）

2023/6/7
式、制約条件に対する型情報の追記を実装
一部の全く同一の式の間で等価性判定がfalseになる問題を修正

2023/6/6
CASE文のIF文への書き換えを実装
CASE文をPrintすると候補の値とTHENがくっついて表示される問題を修正
CASE文で単項マイナス演算子を使うとうまく構文解析できない問題を修正
左辺が関数表記の代入文の関係の上書き演算子を用いた形への書き換えを実装
α-変換のCASE文関連のバグ修正

2023/6/2
構文解析以降の工程のストラクチャー(モジュール)内の関数を全て公開 (これにより、例えばデバッグ時にモデルの一部分にだけ推論規則や型推論を適用可能に)
コメント修正・追加
起動時のコマンドライン引数を「sml main.sml 入力ディレクトリ 出力ディレクトリ 書き換え規則ファイル 暗黙の条件の導出規則ファイル」の順番に変更
BReal (B言語上でのREAL型) における演算子のプレフィックスを@から`に変更 (たとえば足し算なら`+)
出力される細分化モデル名をファイル名と同様にナンバリング

2023/5/30
LET文の展開をExpansion.smlからBetaReduction.smlに移動
操作分割のバグ修正、IF条件を考慮したアルゴリズムの実装
制約条件抽出におけるマシンパラメータ集合の型推論バグの修正
※以下ファイル更新内容
# 追加
 - AlphaConversion.sml
 - BetaReduction.sml
 - ExtractConditions.sml
# 削除
 - Expansion.sml

2023/3/31
LET文の展開と操作分割を実装
※新しくExpansion.smlとOperationDivision.smlを追加したのでリンクを張ってください

2022/12/22
型推論エラーが何の演算子で起こったのかを表示するようにエラーメッセージを改良

2022/12/21
推論規則適用前後を比較し変化があったか判定する関数においてイコール演算子で比較していたため式の可換性を考慮するよう修正
※新しくImplicitCondition.smlを追加したのでリンクを張ってください(実装はまだ)

2022/12/16
推論規則内の変数の末尾に"_lit"を付けることでリテラルまたは単項マイナス演算子付きの整数リテラルとして扱われる機能を追加
Simplifyで整数・実数の二項マイナス演算と整数の単項マイナス・累乗演算に対応

2022/12/6
INITIALISATION中の操作呼び出しの構文解析に失敗するバグを修正
（大久保先輩のコードを統合）

2022/12/2
軽微な修正
構文エラーメッセージの改善
ASSERT文が検出できないバグを修正
Simplifyの内容をリテラルどうしの演算の削除のみに限定

2022/12/1
Bの文字列リテラル中のダブルクォーテーションマークのエスケープを実装
README_FOR_DEVELOPERS.txtを新規作成

2022/11/30
モデルのコメントアウトに対応
（大久保先輩のコードを統合）
ルールファイルのコメントアウ卜を実装

2022/11/25
複数の入力ファイルをディレクトリ単位で扱えるようになった
（大久保先輩のコードを統合）
可換演算子の部分適用に対応（ただし場合によっては実行時間に難あり）

2022/11/21
構文解析・型推論のFLOAT、REAL、btrue/bfalseへの対応
型制約付き推論規則を与えることが可能に
数値リテラルどうしの簡単な演算の削除などを行う関数を整備、推論規則適用時に合わせて適用（まだ途中、内容はSimplify.smlのコメントに）
※新しくSimplify.smlを追加したのでリンクを張ってください

2022/11/20
集合の内包表記の型推論の間違い修正
ラムダ式の構文解析バグを修正（Keywordの "Dot", "VBar"を".", "|"に修正）
存在記号、全称記号の部分式の型推論がされない問題を修正
MLコードを触らずにコマンドライン引数として推論規則・入力・出力のファイル名を与えることが可能に

2022/11/16
式の書き換えとりあえず動くようにした
